src/unit_tests.c:158:46: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]
                parser_process(sprintf("%d", i));
                                             ^
/usr/include/stdio.h:335:30: note: passing argument to parameter '__format' here
                    const char *__restrict __format, ...) __THROWNL;
                                           ^
src/unit_tests.c:158:46: error: format string is not a string literal (potentially insecure) [-Werror,-Wformat-security]
                parser_process(sprintf("%d", i));
                                             ^
src/unit_tests.c:158:46: note: treat the string as an argument to avoid this
                parser_process(sprintf("%d", i));
                                             ^
                                             "%s", 
src/unit_tests.c:158:32: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]
                parser_process(sprintf("%d", i));
                               ^~~~~~~~~~~~~~~~
include/parser.h:5:34: note: passing argument to parameter 'input' here
void parser_process(const char * input);
                                 ^
src/unit_tests.c:159:68: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]
                if (test_string(parser_get_token(0), sprintf("%d", i))) {
                                                                   ^
/usr/include/stdio.h:335:30: note: passing argument to parameter '__format' here
                    const char *__restrict __format, ...) __THROWNL;
                                           ^
src/unit_tests.c:159:68: error: format string is not a string literal (potentially insecure) [-Werror,-Wformat-security]
                if (test_string(parser_get_token(0), sprintf("%d", i))) {
                                                                   ^
src/unit_tests.c:159:68: note: treat the string as an argument to avoid this
                if (test_string(parser_get_token(0), sprintf("%d", i))) {
                                                                   ^
                                                                   "%s", 
src/unit_tests.c:159:54: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Werror,-Wint-conversion]
                if (test_string(parser_get_token(0), sprintf("%d", i))) {
                                                     ^~~~~~~~~~~~~~~~
src/unit_tests.c:49:46: note: passing argument to parameter 'expected' here
int test_string(const char *val, const char *expected) {
                                             ^
6 errors generated.
make: *** [Makefile:49: unit_tests.o] Error 1
